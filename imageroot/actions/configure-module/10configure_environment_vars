#!/usr/bin/env python3

#
# Copyright (C) 2022 Nethesis S.r.l.
# SPDX-License-Identifier: GPL-3.0-or-later
#

import json
import sys
import agent

# Try to parse the stdin as JSON.
# If parsing fails, output everything to stderr
data = json.load(sys.stdin)

#This is specific to you module, so you need to change it accordingly.
#agent.dump_env()
DATABASE_URL = data.get("DATABASE_URL", "postgresql://postgres@postgres-app/planka")
DEFAULT_ADMIN_EMAIL = data.get("DEFAULT_ADMIN_EMAIL", "admin@local")
DEFAULT_ADMIN_PASSWORD = data.get("password", "")
DEFAULT_ADMIN_NAME = data.get("DEFAULT_ADMIN_NAME", "Planka Admin")
DEFAULT_ADMIN_USERNAME = data.get("username", "")
TRUST_PROXY = data.get("TRUST_PROXY", "true")

planka = {
 "DATABASE_URL" : DATABASE_URL ,
 "DEFAULT_ADMIN_EMAIL" : DEFAULT_ADMIN_EMAIL ,
 "DEFAULT_ADMIN_PASSWORD" : DEFAULT_ADMIN_PASSWORD ,
 "DEFAULT_ADMIN_NAME" : DEFAULT_ADMIN_NAME ,
 "DEFAULT_ADMIN_USERNAME" : DEFAULT_ADMIN_USERNAME ,
 "TRUST_PROXY" : TRUST_PROXY ,
}
agent.write_envfile("planka.env", planka)
POSTGRES_DB = data.get("POSTGRES_DB", "planka")
POSTGRES_HOST_AUTH_METHOD = data.get("POSTGRES_HOST_AUTH_METHOD", "trust")

postgres = {
 "POSTGRES_DB" : POSTGRES_DB ,
 "POSTGRES_HOST_AUTH_METHOD" : POSTGRES_HOST_AUTH_METHOD ,
}
agent.write_envfile("postgres.env", postgres)
